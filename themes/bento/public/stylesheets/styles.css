@charset "UTF-8";
/* normalize.css v2.1.0 | MIT License | git.io/normalize */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block;
}

audio, canvas, video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden] {
  display: none;
}

html {
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

body {
  margin: 0;
}

a:focus {
  outline: thin dotted;
}

a:active, a:hover {
  outline: 0;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b, strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

mark {
  background: #ff0;
  color: #000;
}

code, kbd, pre, samp {
  font-family: monospace, serif;
  font-size: 1em;
}

pre {
  white-space: pre-wrap;
}

q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

small {
  font-size: 80%;
}

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 0;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
}

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
}

button, input {
  line-height: normal;
}

button, select {
  text-transform: none;
}

button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled], html input[disabled] {
  cursor: default;
}

input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
  vertical-align: top;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/**
 * CONTENTS
 *
 * Colours...............Common colours used throughout the site
 * Fonts.................Font groupings
 * Layout................Useful site layout sizes, breakpoints etc
 * Text..................Sizes etc for site wide text state
 * Modal.................Modal dialog
 * Navigation............The navigation that sits in the header
 * Events................The table of events
 * Sources Grid..........The grid event sources
 * Buttons...............Button styling
 * Graphs................Graph layout details
 * Mobile................Any mobile specific details that don't fit under the categories above
 */
/*------------------------------------*\
    #COLOURS
\*------------------------------------*/
/*------------------------------------*\
    #FONTS
\*------------------------------------*/
/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/
/*------------------------------------*\
    #TEXT
\*------------------------------------*/
/*------------------------------------*\
    #MODAL
\*------------------------------------*/
/*------------------------------------*\
    #NAVIGATION
\*------------------------------------*/
/*------------------------------------*\
    #EVENTS
\*------------------------------------*/
/*------------------------------------*\
    #SOURCES GRID
\*------------------------------------*/
/*------------------------------------*\
    #BUTTON
\*------------------------------------*/
/*------------------------------------*\
    #GRAPHS
\*------------------------------------*/
/*------------------------------------*\
    #MOBILE
\*------------------------------------*/
/**
 * @license
 * MyFonts Webfont Build ID 2900190, 2014-10-12T03:05:28-0400
 *
 * The fonts listed in this notice are subject to the End User License
 * Agreement(s) entered into by the website owner. All other parties are
 * explicitly restricted from using the Licensed Webfonts(s).
 *
 * You may obtain a valid license at the URLs below.
 *
 * Webfont: Megaphone by Red Rooster Collection
 * URL: http://www.myfonts.com/fonts/redrooster/megaphone/regular/
 * Copyright: Copyright (c) 2009 by International TypeFounders, Inc. All rights reserved.
 * Licensed pageviews: 10,000
 *
 *
 * License: http://www.myfonts.com/viewlicense?type=web&buildid=2900190
 *
 * Â© 2014 MyFonts Inc
*/
@font-face {
  font-family: 'Megaphone';
  src: url("../fonts/2C40DE_0_0.eot");
  src: url("../fonts/2C40DE_0_0.eot?#iefix") format("embedded-opentype"), url("../fonts/2C40DE_0_0.woff") format("woff"), url("../fonts/2C40DE_0_0.ttf") format("truetype");
}
/**
 * Here's any sort of default base styling the site has. The vast majority of changes
 * should not be on a base element, like here, but in classes exposed in other files
 */
*, *:before, *:after {
  box-sizing: border-box;
}

body {
  font-weight: 100;
  min-height: 100vh;
  position: relative;
  -webkit-font-smoothing: antialiased;
}

/* Adds a slight border on the sides of the main content for smaller devices */
@media (max-width: 940px) {
  body {
    border-left: 3px solid #e52a08;
    border-right: 3px solid #e52a08;
  }
}
a {
  color: #e52a08;
  text-decoration: none;
}

em {
  font-style: italic;
}

strong {
  font-weight: bold;
}

label {
  cursor: pointer;
}

main {
  padding: 17.5px 0 35px;
}

section {
  padding-top: 17.5px;
  overflow: auto;
}

/**
 * Contains a set of useful base classes that can be used on any element.
 *
 * They all should have !important because they should specify a very specific
 * and ideal use case. No other properties on a selector should override these. If
 * they do then you've done something very, very wrong;
 */
/* Totally removes the element from the view */
.u-hidden {
  display: none !important;
}

/* Remove all padding and margin from an element */
.u-noMargin {
  margin: 0 !important;
}

.u-noPadding {
  padding: 0 !important;
}

/*
 * Contains shared classes that can be easily reused for setting out layouts of
 * elements
 */
/* The content holder for the different pieces of the layout */
.l-mainContent {
  margin: 0 auto;
  max-width: 940px;
  position: relative;
}

@media (max-width: 940px) {
  .l-mainContent {
    margin: 0 10px;
  }
}
/*------------------------------------*\
    #GRIDS

    Using Pure's grids here. Easy.
\*------------------------------------*/
/*!
Pure v0.3.0
Copyright 2013 Yahoo! Inc. All rights reserved.
Licensed under the BSD License.
https://github.com/yui/pure/blob/master/LICENSE.md
*/
/*csslint regex-selectors:false, known-properties:false, duplicate-properties:false*/
.pure-g {
  letter-spacing: -0.31em;
  /* Webkit: collapse white-space between units */
  *letter-spacing: normal;
  /* reset IE < 8 */
  *word-spacing: -0.43em;
  /* IE < 8: collapse white-space between units */
  text-rendering: optimizespeed;
  /* Webkit: fixes text-rendering: optimizeLegibility */
    /*
    Sets the font stack to fonts known to work properly with the above letter
    and word spacings. See: https://github.com/yui/pure/issues/41/

    The following font stack makes Pure Grids work on all known environments.

    * FreeSans: Ships with many Linux distros, including Ubuntu

    * Arimo: Ships with Chrome OS. Arimo has to be defined before Helvetica and
      Arial to get picked up by the browser, even though neither is available
      in Chrome OS.

    * Droid Sans: Ships with all versions of Android.

    * Helvetica, Arial, sans-serif: Common font stack on OS X and Windows.
    */
  font-family: FreeSans, Arimo, "Droid Sans", Helvetica, Arial, sans-serif;
    /*
    Use flexbox when possible to avoid `letter-spacing` side-effects.

    NOTE: Firefox (as of 25) does not currently support flex-wrap, so the
    `-moz-` prefix version is omitted.
    */
  display: -webkit-flex;
  -webkit-flex-flow: row wrap;
  /* IE10 uses display: flexbox */
  display: -ms-flexbox;
  -ms-flex-flow: row wrap;
}

/* Opera as of 12 on Windows needs word-spacing.
   The ".opera-only" selector is used to prevent actual prefocus styling
   and is not required in markup.
*/
.opera-only :-o-prefocus,
.pure-g {
  word-spacing: -0.43em;
}

.pure-u {
  display: inline-block;
  *display: inline;
  /* IE < 8: fake inline-block */
  zoom: 1;
  letter-spacing: normal;
  word-spacing: normal;
  vertical-align: top;
  text-rendering: auto;
}

/*
Resets the font family back to the OS/browser's default sans-serif font,
this the same font stack that Normalize.css sets for the `body`.
*/
.pure-g [class*="pure-u"] {
  font-family: sans-serif;
}

.pure-u-1,
.pure-u-1-2,
.pure-u-1-3,
.pure-u-2-3,
.pure-u-1-4,
.pure-u-3-4,
.pure-u-1-5,
.pure-u-2-5,
.pure-u-3-5,
.pure-u-4-5,
.pure-u-1-6,
.pure-u-5-6,
.pure-u-1-8,
.pure-u-3-8,
.pure-u-5-8,
.pure-u-7-8,
.pure-u-1-12,
.pure-u-5-12,
.pure-u-7-12,
.pure-u-11-12,
.pure-u-1-24,
.pure-u-5-24,
.pure-u-7-24,
.pure-u-11-24,
.pure-u-13-24,
.pure-u-17-24,
.pure-u-19-24,
.pure-u-23-24 {
  display: inline-block;
  *display: inline;
  /* IE < 8: fake inline-block */
  zoom: 1;
  letter-spacing: normal;
  word-spacing: normal;
  vertical-align: top;
  text-rendering: auto;
}

.pure-u-1 {
  width: 100%;
}

.pure-u-1-2 {
  width: 50%;
  *width: 49.969%;
}

.pure-u-1-3 {
  width: 33.3333%;
  *width: 33.3023%;
}

.pure-u-2-3 {
  width: 66.6667%;
  *width: 66.6357%;
}

.pure-u-1-4 {
  width: 25%;
  *width: 24.969%;
}

.pure-u-3-4 {
  width: 75%;
  *width: 74.969%;
}

.pure-u-1-5 {
  width: 20%;
  *width: 19.969%;
}

.pure-u-2-5 {
  width: 40%;
  *width: 39.969%;
}

.pure-u-3-5 {
  width: 60%;
  *width: 59.969%;
}

.pure-u-4-5 {
  width: 80%;
  *width: 79.969%;
}

.pure-u-1-6 {
  width: 16.6667%;
  *width: 16.6357%;
}

.pure-u-5-6 {
  width: 83.3333%;
  *width: 83.3023%;
}

.pure-u-1-8 {
  width: 12.5%;
  *width: 12.469%;
}

.pure-u-3-8 {
  width: 37.5%;
  *width: 37.469%;
}

.pure-u-5-8 {
  width: 62.5%;
  *width: 62.469%;
}

.pure-u-7-8 {
  width: 87.5%;
  *width: 87.469%;
}

.pure-u-1-12 {
  width: 8.3333%;
  *width: 8.3023%;
}

.pure-u-5-12 {
  width: 41.6667%;
  *width: 41.6357%;
}

.pure-u-7-12 {
  width: 58.3333%;
  *width: 58.3023%;
}

.pure-u-11-12 {
  width: 91.6667%;
  *width: 91.6357%;
}

.pure-u-1-24 {
  width: 4.1667%;
  *width: 4.1357%;
}

.pure-u-5-24 {
  width: 20.8333%;
  *width: 20.8023%;
}

.pure-u-7-24 {
  width: 29.1667%;
  *width: 29.1357%;
}

.pure-u-11-24 {
  width: 45.8333%;
  *width: 45.8023%;
}

.pure-u-13-24 {
  width: 54.1667%;
  *width: 54.1357%;
}

.pure-u-17-24 {
  width: 70.8333%;
  *width: 70.8023%;
}

.pure-u-19-24 {
  width: 79.1667%;
  *width: 79.1357%;
}

.pure-u-23-24 {
  width: 95.8333%;
  *width: 95.8023%;
}

/*csslint regex-selectors:false, known-properties:false, duplicate-properties:false*/
.pure-g-r {
  letter-spacing: -0.31em;
  *letter-spacing: normal;
  *word-spacing: -0.43em;
    /*
    Sets the font stack to fonts known to work properly with the above letter
    and word spacings. See: https://github.com/yui/pure/issues/41/

    The following font stack makes Pure Grids work on all known environments.

    * FreeSans: Ships with many Linux distros, including Ubuntu

    * Arimo: Ships with Chrome OS. Arimo has to be defined before Helvetica and
      Arial to get picked up by the browser, even though neither is available
      in Chrome OS.

    * Droid Sans: Ships with all versions of Android.

    * Helvetica, Arial, sans-serif: Common font stack on OS X and Windows.
    */
  font-family: FreeSans, Arimo, "Droid Sans", Helvetica, Arial, sans-serif;
    /*
    Use flexbox when possible to avoid `letter-spacing` side-effects.

    NOTE: Firefox (as of 25) does not currently support flex-wrap, so the
    `-moz-` prefix version is omitted.
    */
  display: -webkit-flex;
  -webkit-flex-flow: row wrap;
  /* IE10 uses display: flexbox */
  display: -ms-flexbox;
  -ms-flex-flow: row wrap;
}

/* Opera as of 12 on Windows needs word-spacing.
   The ".opera-only" selector is used to prevent actual prefocus styling
   and is not required in markup.
*/
.opera-only :-o-prefocus,
.pure-g-r {
  word-spacing: -0.43em;
}

/*
Resets the font family back to the OS/browser's default sans-serif font,
this the same font stack that Normalize.css sets for the `body`.
*/
.pure-g-r [class*="pure-u"] {
  font-family: sans-serif;
}

.pure-g-r img {
  max-width: 100%;
  height: auto;
}

@media (min-width: 980px) {
  .pure-visible-phone {
    display: none;
  }

  .pure-visible-tablet {
    display: none;
  }

  .pure-hidden-desktop {
    display: none;
  }
}
@media (max-width: 480px) {
  .pure-g-r > .pure-u,
  .pure-g-r > [class*="pure-u-"] {
    width: 100%;
  }
}
@media (max-width: 767px) {
  .pure-g-r > .pure-u,
  .pure-g-r > [class*="pure-u-"] {
    width: 100%;
  }

  .pure-hidden-phone {
    display: none;
  }

  .pure-visible-desktop {
    display: none;
  }
}
@media (min-width: 768px) and (max-width: 979px) {
  .pure-hidden-tablet {
    display: none;
  }

  .pure-visible-desktop {
    display: none;
  }
}
/* Base text setup */
h1, h2, h3 {
  color: #232323;
  font-family: Megaphone, Impact;
  font-weight: 100;
}

h1 {
  font-size: 32px;
}

h2 {
  font-size: 24px;
}

h3 {
  font-size: 18px;
}

p {
  font-size: 14px;
}

/**
 * CONTENTS
 *
 * Base..................Styles all buttons share
 * Primary...............A button signalling a primary action
 * Secondary.............A button signalling a secondary action
 */
/*------------------------------------*\
    #BASE

    1.  By default all the buttons have a small margin to either side. If the design
        changes where this padding should be removed, you'll probably want to create
        classes that just deal with the left and right margins instead of overriding
        the margin property here.
\*------------------------------------*/
.button {
  border-radius: 3px;
  display: inline-block;
  font-size: 18px;
  line-height: 18px;
  margin: 0 5px;
  /* [1] */
  padding: 10px;
}

/*------------------------------------*\
    #PRIMARY
\*------------------------------------*/
.button-primary {
  background-color: #009900;
  border: 1px solid #009900;
  color: #fff;
  font-weight: bold;
  padding-left: 50px;
  padding-right: 50px;
}

/*------------------------------------*\
    #SECONDARY
\*------------------------------------*/
.button-secondary {
  background-color: #f7f7f7;
  border: 1px solid #d6d6d6;
  color: #676767;
}

/**
 * CONTENTS
 *
 * Base..................Header container styles
 * Text/components.......Styles for the things that will only live within the header
 */
/*------------------------------------*\
    #BASE

    I have the same thoughts here about the overly broad class name as I did with the
    `.footer` class. Let's ignore this for now
\*------------------------------------*/
.header {
  background-color: #e52a08;
  color: #fff;
  padding-bottom: 15px;
  padding-top: 20px;
}
.header a {
  color: #fff;
}

/*------------------------------------*\
    #TEXT/COMPONENTS
\*------------------------------------*/
.headerTitle {
  color: #fff;
  font-family: Megaphone, Impact;
  font-size: 47px;
  font-weight: 100;
  letter-spacing: 1px;
  margin: 0;
  text-indent: -4px;
}

@media (max-width: 540px) {
  .headerTitle {
    font-size: 32px;
  }
}
.headerAction {
  background: none;
  border: none;
  color: #fff;
  font-weight: bold;
  padding: 2px 1px 1px;
  text-decoration: underline;
}
.headerAction:hover, .headerAction:focus {
  background: white;
  color: #e52a08;
  text-decoration: none;
}

/*------------------------------------*\
    #SITE FOOTER

    I'm still not sure of the class name here. We put a class on the footer for the
    site because the <footer> tag can be used multiple times in different contexts.
    The use of `.footer` makes me wonder if it's not specialised enough - you could
    easily argue I'm just creating specificity for a single element..
    I think it'll be ok for the time being because we currently only have one footer.
    Retrofitting is easy. So why not just use the footer tag directly instead of a
    class, James? Because we have conventions and that doesn't fit in with them.
\*------------------------------------*/
.footer {
  background-color: #e52a08;
  bottom: 0;
  height: 30px;
  left: 0px;
  position: absolute;
  right: 0px;
}

/**
 * The navigation that sits in the header. Placed up the top right hand side.
 */
.headerActions {
  position: absolute;
  right: 0;
  top: 0;
}

@media (min-width: 940px) {
  .headerActions {
    margin-top: 10px;
  }
}
@media (max-width: 940px) {
  .headerActions {
    left: 0;
    top: 60px;
  }
}
@media (max-width: 540px) {
  .headerActions {
    top: 30px;
  }
}
/**
 * CONTENTS
 *
 * Container.............The styles for the modal's main container
 * Inner.................All the bits that sit inside the container
 */
/*------------------------------------*\
    #CONTAINER
\*------------------------------------*/
.modalContainer {
  background-color: rgba(35, 35, 35, 0.6);
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

/*------------------------------------*\
    #INNER
\*------------------------------------*/
.modal {
  background-color: #fff;
  border-radius: 5px;
  box-shadow: 0 2px 2px 1px #666666;
  left: 50%;
  margin-left: -470px;
  overflow: hidden;
  /* Hide the sbox shadow of the footer */
  padding: 20px;
  padding-bottom: 90px;
  position: relative;
  top: 50px;
  width: 940px;
}

@media (max-width: 940px) {
  .modal {
    left: 0;
    margin: 0 20px;
    right: 0;
    width: auto;
  }
}
.modalHeader {
  margin-bottom: 20px;
}

.modalTitle {
  font-size: 32px;
  margin: 0;
}

.modalBody {
  max-height: 350px;
  overflow-y: scroll;
}

.modalFooter {
  border-radius: 0 0 5px 5px;
  bottom: 0;
  box-shadow: 0 0 5px 0 #ccc;
  height: 70px;
  left: -20px;
  position: absolute;
  right: -20px;
}

.modalFooter--buttonHolder {
  text-align: center;
  padding-top: 15px;
}

/**
 * CONTENTS
 *
 * Container.............The container for the sources grid
 * Text..................Any text differentiators for the sources
 * Cells.................All the details for the source options
 * Grid..................Styling for the overall grid
 * Checks................The custom checkboxes/labels for the event sources
 */
/*------------------------------------*\
    #CONTAINER
\*------------------------------------*/
.sources {
  border: none;
  margin: 20px 0 0;
  padding: 10px 0;
  position: relative;
}

/*------------------------------------*\
    #TEXT
\*------------------------------------*/
.sourcesTitle {
  border: none;
  font-family: helvetica, arial, sans-serif;
  font-size: 22px;
  margin: 0;
}

.sourcesSelected {
  font-size: 14px;
}

/*------------------------------------*\
    #GRID
\*------------------------------------*/
.sourcesGrid {
  margin-top: 40px;
}

/*------------------------------------*\
    #CELLS

    1.  Reasonably complex nth-child combinations that will take care of any number
        of cells, provided they are always displayed in groups of three. All styles
        listed here need to be modified for any media queries in use (provided the
        queries requires these to be modified - currently hinges on the responsive grid
        from Pure in grid.scss
\*------------------------------------*/
.sourcesGridCell {
  border-bottom: 1px solid #ccc;
  height: 40px;
  position: relative;
  /* Ensure that we always have a right border on the final cell */
}
.sourcesGridCell:nth-child(1), .sourcesGridCell:nth-child(2), .sourcesGridCell:nth-child(3) {
  /* 1. */
  border-top: 1px solid #ccc;
}
.sourcesGridCell:nth-child(3n), .sourcesGridCell:nth-child(3n - 1) {
  border-right: 1px solid #ccc;
}
.sourcesGridCell:nth-child(3n) {
  border-right: 1px solid #ccc;
}
.sourcesGridCell:nth-child(3n - 2) {
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
}
.sourcesGridCell:last-child {
  border-right: 1px solid #ccc;
}

@media (max-width: 540px) {
  /* Only two cells per row instead of three */
  .sourcesGridCell {
    /* Undo from desktop. Cascade takes care of putting the right borders
      back in if necessary */
    /* Ensure that we always have a right border on the final cell */
  }
  .sourcesGridCell:nth-child(3) {
    border-left: none;
    border-top: none;
  }
  .sourcesGridCell:nth-child(3n - 2) {
    border-left: none;
    border-right: none;
  }
  .sourcesGridCell:nth-child(1), .sourcesGridCell:nth-child(2) {
    border-top: 1px solid #ccc;
  }
  .sourcesGridCell:nth-child(2n), .sourcesGridCell:nth-child(2n - 1) {
    border-right: 1px solid #ccc;
  }
  .sourcesGridCell:nth-child(2n) {
    border-right: 1px solid #ccc;
  }
  .sourcesGridCell:nth-child(2n - 1) {
    border-left: 1px solid #ccc;
    border-right: 1px solid #ccc;
  }
  .sourcesGridCell:last-child {
    border-right: 1px solid #ccc;
  }
}
/*------------------------------------*\
    #CHECKS

    1.  I'm using a hidden checkbox in the markup to determine the display state of this
        sibling class.
    2.  `sourcesCheckDisplay-circle` follows a similar structure. The only real difference
        is the display image
\*------------------------------------*/
/* Minus 2 for the border of the cell */
.sourcesCheckDisplay {
  height: 38px;
  left: 0;
  position: absolute;
  top: 0;
  width: 38px;
  z-index: 1;
}
.sourcesCheckDisplay-circle {
  top: 36px;
}

.sourcesCheck + .sourcesCheckDisplay {
  /* 1. */
  background: transparent url("../images/checkbox.png") -38px top no-repeat;
}
.sourcesCheck + .sourcesCheckDisplay-circle {
  background: transparent url("../images/checkbox.png") -38px -38px no-repeat;
}

.sourcesCheck:checked + .sourcesCheckDisplay {
  background: transparent url("../images/checkbox.png") left top no-repeat;
}
.sourcesCheck:checked + .sourcesCheckDisplay-circle {
  /* 2. */
  background: transparent url("../images/checkbox.png") left -38px no-repeat;
}

.sourcesCheck:checked ~ .sourcesLabel {
  color: #232323;
}

.sourcesLabel {
  color: #707070;
  display: block;
  font-size: 14px;
  line-height: 40px;
  overflow-x: hidden;
  padding-left: 45px;
  position: absolute;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
  z-index: 2;
}

/**
 * CONTENTS
 *
 * Holder................Any container specific styles we need
 * Scroller..............The element that makes the graph holder x-scroll on small screens
 * Axis..................Details to do with the resulting SVG axis
 */
/*------------------------------------*\
    #HOLDER
\*------------------------------------*/
.graphHolder {
  height: 60px;
  width: 940px;
}

@media (max-width: 940px) {
  .graphHolder {
    margin-top: 32px;
  }
}
/*------------------------------------*\
    #SCROLLER
\*------------------------------------*/
.graphScroller {
  overflow: hidden;
  overflow-x: scroll;
}

/*------------------------------------*\
    #AXIS

    1.  Again, I'm not a fan of nesting here. However, all of this is so tied to the d3 script
        that extensibility is kind of a sore topic anyway.
    2.  The graph is currently only used in the header. I'll assume colours for this here based
        on the comment for 1.
\*------------------------------------*/
.graphDivider {
  stroke: #f85d41;
  /* 2. */
}

.axis line, .axis path {
  /* 1. */
  fill: none;
  shape-rendering: crispEdges;
  stroke: #f85d41;
  /* 2. */
}
.axis text {
  display: none;
}

.axis-hideTicks .tick {
  display: none;
}

.axisLabel {
  fill: #fff;
  font-size: 12px;
  text-transform: uppercase;
}

/**
 * CONTENTS
 *
 * Text..................Text styles that are only relevant to the events
 * Line item.............Lineitem layout
 * Line item details.....Styling of meta data within a line item
 * Subtext...............Info that sits right down the bottom of the page
 */
/*------------------------------------*\
		#TEXT
\*------------------------------------*/
.title {
  font-family: helvetica, arial, sans-serif;
  font-weight: 100;
  margin: 0;
  padding: 20px 0 10px 0;
  border-bottom: 1px solid #999999;
}

/*-------------------------------------*\
		#MONTH OF EVENTS
\*-------------------------------------*/
.monthEvents {
  padding: 0;
}
.monthEvents ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*------------------------------------*\
		#LINE ITEMS

		The line items are each of the individual calendar events.

		Everything here is absolutely positioned so that, if need be, we can change the
		HTML structure for the benefit of users with screen readers but can keep the
		visuals looking accurate for those without

		1.  Normally we shouldn't nest things like this (or style an element tag) but I think
				given the layout we have, this is going to be fine.
		2.  Given our text and height data, what's the correct spacing.
		3.  We want any links within a line item to take up the entire parent container.
\*------------------------------------*/
.lineItemHolder {
  border-bottom: 1px solid gray;
}

.lineItem {
  color: #232323;
  display: block;
  font-size: 14px;
  height: 50px;
  overflow: auto;
  position: relative;
}
.lineItem:last-child span {
  border-bottom: none !important;
  /* Overriding the specificity of the .lineItem-* classes. */
}
.lineItem:hover, .lineItem:focus, .lineItem:active {
  color: #fff;
  background-color: #e52a08;
}
.lineItem:hover span, .lineItem:focus span, .lineItem:active span {
  border-bottom: none;
  color: #fff;
}
.lineItem span {
  /* 1. */
  overflow: hidden;
  position: absolute;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.lineItem-group {
  color: #e52a08;
}

/* Shared placedhlders for common metadata properties */
.lineItem-time, .lineItem-group, .lineItem-title, .lineItem-location {
  border-bottom: 1px solid #999999;
}

.lineItem-day, .lineItem-date, .lineItem-time, .lineItem-title, .lineItem-location {
  /* 2. */
  height: 50px;
  padding-top: 18px;
}

.lineItem-group {
  /* 2. */
  font-family: Megaphone, Impact;
  font-size: 24px;
  height: 50px;
  padding-top: 9px;
}

.lineItem-day {
  left: 10px;
  text-align: left;
  width: 5.31915%;
}

.lineItem-date {
  left: 5.31915%;
  text-align: left;
  width: 4.25532%;
}

.lineItem-time {
  left: 9.57447%;
  width: 11.17021%;
}

.lineItem-group {
  left: 20.74468%;
  width: 27.65957%;
}

.lineItem-title {
  left: 48.40426%;
  padding-right: 1.06383%;
  width: 27.65957%;
}

.lineItem-location {
  left: 76.06383%;
  padding-right: 15px;
  text-align: right;
  width: 23.40426%;
}

.lineItem-link {
  display: block;
  /* 3. */
  height: 100%;
  width: 100%;
}

@media (max-width: 540px) {
  .lineItem {
    height: 100px;
  }

  .lineItem-day {
    width: 8%;
  }

  .lineItem-date {
    left: 8%;
    width: 8%;
  }

  .lineItem-time {
    border-bottom: none;
    left: 16%;
    width: 14%;
  }

  .lineItem-group {
    border-bottom: none;
    left: 30%;
    width: 70%;
  }

  .lineItem-title {
    left: 16%;
    top: 50px;
    width: 50%;
  }

  .lineItem-location {
    left: 66%;
    top: 50px;
    width: 30%;
  }
}
/*------------------------------------*\
#SUBTEXT
\*------------------------------------*/
.subText {
  padding-top: 52.5px;
}

/*# sourceMappingURL=styles.css.map */
